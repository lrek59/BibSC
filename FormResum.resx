<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictBoxOk.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOkEzNDVCODlBMUNCNkU1MTE4OUIxRjUzODgxQzNE
        NkMzIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkVGNkUzQzNFQjYxQzExRTVCQjdFODA0RkZBMEM3
        MzNEIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkVGNkUzQzNEQjYxQzExRTVCQjdFODA0RkZBMEM3
        MzNEIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzYgKFdpbmRvd3MpIj4gPHhtcE1N
        OkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QTM0NUI4OUExQ0I2RTUxMTg5QjFG
        NTM4ODFDM0Q2QzMiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6QTM0NUI4OUExQ0I2RTUxMTg5QjFG
        NTM4ODFDM0Q2QzMiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/
        eHBhY2tldCBlbmQ9InIiPz4C0JTTAAADXElEQVRIS62XTUgVURTHZ9GmddAi2rgQCkIU08KFRFSUaVFE
        C6lFBBFC2KKiooggMiJoFy1btIl2tatVBqbpmz41szQTEqmoLK0k6TS/894Z7sy7z+apF/7OmzP3nP/5
        uh8GIpIJk3++Sm6yS26OX5eLIyfk6OB+xbm37Srr+fZAPs1MRFP9+ml4hS6Gfw7K5XenZc/TRmkJ671o
        DusUO8J16ggOpu2k4RUCIrw6ej426iP0webjwPtfw5Epv32vcGDqmbQ+3yxNudqySF2YA51f7kUmizmK
        BOH3btnSVyXNubVeg+WiKayVux9vRaaTPIkXUrM1V62R+ozMF9hLRx7/mJ6d0ubAQ54+AwsBWXRrHhNf
        GT2rHxeDFBugoadCGh9Xys5wvWyPStc2sDdJPP57TFPMR5+hcgAhTVX3aIUceNmigHzXkwa1bylXYtbp
        YkRrpBWdS6Rj5CQEMvt3Vo68atXo+XaofzfiQGtLKhD6jGUFpEQEKTubO25P3JDKh0t1HjzUWpcPCguJ
        Fl06F+MWqQ3KSJo39K6K5+NIwB/S7BoqBxYppDSoOyZmPigh9Yac+USMc8GF4WPzXrduen2kNGxN1/KY
        1HBq6LAEFN5NM5M29a6Rqq5lqsQ3esBVBG560zVV0r5qtZEmBe2D+4qJIeXJUUe3o7wtV5Mg/y9pFGkp
        UqDEnCLW0TxRuP/5TsGM6AkFAcYgh5R5yCiTOziP6Rdfel0cf30w31wWpREXFnk8jJzImedbMllJ4cDh
        gJsD0Vi6cYJOHJruL5jMj2tjl5S8VCOxx8+VXgPElFE3EF5Q5AOK9d0rdadJk+MpaXKHRZqFFJA1bjW6
        ZVJnorSoMcDa85G7I2t6DTQkF4xo5PdqPHB3FjBX5AzSWw4pQW3sXR1fCpQYsKjtCLPJLjnXIRt2mmVN
        L6Ssa4sWxMRc7iAgCks5MHLkdDvNiCwrqQHbL36ExcSAqJhAA6TJSRMOADtfXcOlQONSxvS9K0EMiMpH
        DtiXgSsrBXQhxWGWYpon8WLgQo6CbSzzAT3gi9RQJDDQ6TQc5NQX730EaUCIDjeNuf6j8Apd0ExsGqxB
        jAKcsDLwm7LwnScXulJRuvAKfeC6gkH27TNv2vSEAWSFLZQ9v7DkvPpJSPAPZhhNtl10fOEAAAAASUVO
        RK5CYII=
</value>
  </data>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>